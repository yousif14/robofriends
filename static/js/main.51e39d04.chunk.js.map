{"version":3,"sources":["reportWebVitals.js","Components/cardlist.js","Components/SearchBox.js","Components/Scroll.js","Components/ErrorBoundry.js","Containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CardList","robots","Error","SearchBox","searchchange","className","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","OnSearchChange","event","Searchfield","target","value","fetch","response","json","users","filteredrobots","filter","robot","name","toLocaleLowerCase","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCkBCQ,EArBE,SAAC,GAAa,EAAZC,OAEX,MAAM,IAAIC,MAAM,WCUTC,EAdG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACpB,OACI,qBAAKC,UAAU,SAAf,SACI,uBACAA,UAAU,qCACVC,KAAK,SACLC,YAAY,gBACZC,SAAUJ,OCIHK,EAXD,SAACC,GACf,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAO,kBAAmBC,OAAQ,SAApE,SACKJ,EAAMK,YCmBAC,E,kDApBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHA,E,qDAOlB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAI7B,WACI,OAAGG,KAAKJ,MAAMC,SACH,wCAERG,KAAKX,MAAMK,a,GAlBKQ,aCkDZC,G,wDA5CX,aAAc,IAAD,8BACb,gBAcAC,eAAiB,SAACC,GAClB,EAAKJ,SAAS,CAACK,YAAaD,EAAME,OAAOC,SAdzC,EAAKZ,MAAO,CACZhB,OAAQ,GACR0B,YAAa,IAJA,E,qDAOb,WAAoB,IAAD,OACfG,MAAM,8CACLpC,MAAK,SAAAqC,GAAQ,OAAIA,EAASC,UAC1BtC,MAAK,SAAAuC,GAAK,OAAG,EAAKX,SAAS,CAAErB,OAAOgC,S,oBASzC,WACI,MAA8BZ,KAAKJ,MAA5BhB,EAAP,EAAOA,OAAQ0B,EAAf,EAAeA,YACTO,EAAiBjC,EAAOkC,QAAO,SAAAC,GACrC,OAAOA,EAAMC,KAAKC,oBAAoBC,SAASZ,EAAYW,wBAE3D,OAAQrC,EAAOuC,OAGf,sBAAKnC,UAAU,KAAf,UACI,6CACA,cAAC,EAAD,CAAWD,aAAciB,KAAKI,iBAE9B,cAAC,EAAD,UACI,cAAC,EAAD,UACK,cAAC,EAAD,CAAUxB,OAAQiC,WAR3B,oBAAI7B,UAAU,KAAd,yB,GA1BMkB,cCAlBkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,cAAC,EAAD,MAEAC,SAASC,eAAe,SAM1BtD,M","file":"static/js/main.51e39d04.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList = ({robots}) => {\r\n    if (true){\r\n        throw new Error('nooooo');\r\n\r\n    }\r\n    const cards = robots.map((user, i) => {\r\n        return (<Card \r\n        key={robots[i].id} \r\n        id={robots[i].id} \r\n        name={robots[i].name} \r\n        email={robots[i].email}\r\n        />);\r\n\r\n    })\r\nreturn(  \r\n    <div> \r\n        {cards}\r\n    </div>\r\n\r\n);\r\n}\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchchange}) => {\r\nreturn( \r\n    <div className='tc pa2'>\r\n        <input\r\n        className='tc pa3 ba b--blue bg-lightest-blue'\r\n        type='search' \r\n        placeholder='Search Robots'\r\n        onChange={searchchange}\r\n        />\r\n\r\n    </div>\r\n);\r\n}\r\n\r\nexport default SearchBox;","import react from 'react';\r\n\r\nconst Scroll =(props) => {\r\nreturn(\r\n    <div style={{overflowY: 'scroll', border:'5px solid black', height: '700px'}}>\r\n        {props.children}\r\n\r\n    </div>\r\n\r\n\r\n);\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({hasError: true})\r\n    }\r\n\r\n\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>Ooops!</h1>\r\n        }\r\n    return this.props.children\r\n    }\r\n\r\n}\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport CardList from '../Components/cardlist';\r\nimport SearchBox from '../Components/SearchBox';\r\nimport Scroll from '../Components/Scroll.js';\r\nimport ErrorBoundry from '../Components/ErrorBoundry.js';\r\nimport './App.css';\r\n\r\nclass App extends Component{\r\n    constructor(){\r\n    super()\r\n    this.state ={ \r\n    robots: [],\r\n    Searchfield: ''\r\n    }}\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users =>this.setState({ robots:users }));\r\n        \r\n    }\r\n\r\n\r\n    OnSearchChange = (event) => {\r\n    this.setState({Searchfield: event.target.value })\r\n    }\r\n\r\n    render(){\r\n        const {robots, Searchfield} = this.state;\r\n        const filteredrobots = robots.filter(robot => {\r\n        return robot.name.toLocaleLowerCase().includes(Searchfield.toLocaleLowerCase())\r\n        })\r\n        return !robots.length ?\r\n            <h1 className='tc'>Looding</h1> :\r\n        (\r\n        <div className='tc'> \r\n            <h1>RoboFriends</h1>\r\n            <SearchBox searchchange={this.OnSearchChange} />\r\n\r\n            <Scroll>\r\n                <ErrorBoundry>\r\n                     <CardList robots={filteredrobots}/>\r\n                </ErrorBoundry> \r\n               \r\n            </Scroll>\r\n            \r\n    \r\n        </div>\r\n            );\r\n        }\r\n\r\n}\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './Containers/App';\n\nReactDOM.render(\n  <React.StrictMode>\n  <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}