{"version":3,"sources":["reportWebVitals.js","Components/Card.js","Components/cardlist.js","Components/SearchBox.js","Components/Scroll.js","Components/ErrorBoundry.js","Containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","alt","src","CardList","robots","cards","map","user","i","SearchBox","searchchange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","OnSearchChange","event","Searchfield","target","value","fetch","response","json","users","filteredrobots","filter","robot","toLocaleLowerCase","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCYCQ,EAhBF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAE5B,OAEI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAAQC,IAAG,+BAA0BH,EAA1B,cACpB,gCACI,6BAAKF,IACL,4BAAIC,WCUDK,EAjBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACNC,EAAQD,EAAOE,KAAI,SAACC,EAAMC,GAC/B,OAAQ,cAAC,EAAD,CAERT,GAAIK,EAAOI,GAAGT,GACdF,KAAMO,EAAOI,GAAGX,KAChBC,MAAOM,EAAOI,GAAGV,OAHZM,EAAOI,GAAGT,OAOvB,OACI,8BACKM,KCAMI,EAdG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACpB,OACI,qBAAKV,UAAU,SAAf,SACI,uBACAA,UAAU,qCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCIHI,EAXD,SAACC,GACf,OACI,qBAAKC,MAAO,CAACC,UAAW,SAASC,OAAO,oBAAqBC,OAAQ,UAArE,SACKJ,EAAMK,YCmBAC,E,kDApBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHA,E,qDAOlB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAI7B,WACI,OAAGG,KAAKJ,MAAMC,SACH,wCAERG,KAAKX,MAAMK,a,GAlBKQ,aCkDZC,G,wDA5CX,aAAc,IAAD,8BACb,gBAcAC,eAAiB,SAACC,GAClB,EAAKJ,SAAS,CAACK,YAAaD,EAAME,OAAOC,SAdzC,EAAKZ,MAAO,CACZlB,OAAQ,GACR4B,YAAa,IAJA,E,qDAOb,WAAoB,IAAD,OACfG,MAAM,8CACL7C,MAAK,SAAA8C,GAAQ,OAAIA,EAASC,UAC1B/C,MAAK,SAAAgD,GAAK,OAAG,EAAKX,SAAS,CAAEvB,OAAOkC,S,oBASzC,WACI,MAA8BZ,KAAKJ,MAA5BlB,EAAP,EAAOA,OAAQ4B,EAAf,EAAeA,YACTO,EAAiBnC,EAAOoC,QAAO,SAAAC,GACrC,OAAOA,EAAM5C,KAAK6C,oBAAoBC,SAASX,EAAYU,wBAE3D,OAAQtC,EAAOwC,OAGf,sBAAK5C,UAAU,KAAf,UACI,6CACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAE9B,cAAC,EAAD,UACI,cAAC,EAAD,UACK,cAAC,EAAD,CAAU1B,OAAQmC,WAR3B,oBAAIvC,UAAU,KAAd,yB,GA1BM4B,cCAlBiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,cAAC,EAAD,MAEAC,SAASC,eAAe,SAM1B9D,M","file":"static/js/main.fb1ed5a3.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\n\nconst Card = ({name, email, id}) => { \n\nreturn(\n  \n    <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n        <img alt='robots'src={`https://robohash.org/${id}?200x200`}></img>\n        <div>\n            <h2>{name}</h2>\n            <p>{email}</p>\n        </div>\n\n\n    </div>\n\n)\n}\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\n\nconst CardList = ({robots}) => {\n       const cards = robots.map((user, i) => {\n        return (<Card \n        key={robots[i].id} \n        id={robots[i].id} \n        name={robots[i].name} \n        email={robots[i].email}\n        />);\n\n    })\nreturn(  \n    <div> \n        {cards}\n    </div>\n\n);\n}\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchchange}) => {\nreturn( \n    <div className='tc pa2'>\n        <input\n        className='tc pa3 ba b--blue bg-lightest-blue'\n        type='search' \n        placeholder='Search Robots'\n        onChange={searchchange}\n        />\n\n    </div>\n);\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll =(props) => {\nreturn(\n    <div style={{overflowY: 'scroll',border:'5px solid #C71585', height: '1000px'}}>\n        {props.children}\n\n    </div>\n\n\n);\n};\n\nexport default Scroll;","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info){\n        this.setState({hasError: true})\n    }\n\n\n    render(){\n        if(this.state.hasError){\n            return <h1>Ooops!</h1>\n        }\n    return this.props.children\n    }\n\n}\nexport default ErrorBoundry;","import React, { Component } from 'react';\nimport CardList from '../Components/cardlist';\nimport SearchBox from '../Components/SearchBox';\nimport Scroll from '../Components/Scroll.js';\nimport ErrorBoundry from '../Components/ErrorBoundry.js';\nimport './App.css';\n\nclass App extends Component{\n    constructor(){\n    super()\n    this.state ={ \n    robots: [],\n    Searchfield: ''\n    }}\n\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json())\n        .then(users =>this.setState({ robots:users }));\n        \n    }\n\n\n    OnSearchChange = (event) => {\n    this.setState({Searchfield: event.target.value })\n    }\n\n    render(){\n        const {robots, Searchfield} = this.state;\n        const filteredrobots = robots.filter(robot => {\n        return robot.name.toLocaleLowerCase().includes(Searchfield.toLocaleLowerCase())\n        })\n        return !robots.length ?\n            <h1 className='tc'>Looding</h1> :\n        (\n        <div className='tc'> \n            <h1>RoboFriends</h1>\n            <SearchBox searchchange={this.OnSearchChange} />\n\n            <Scroll>\n                <ErrorBoundry>\n                     <CardList robots={filteredrobots}/>\n                </ErrorBoundry> \n               \n            </Scroll>\n            \n    \n        </div>\n            );\n        }\n\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './Containers/App';\n\nReactDOM.render(\n  <React.StrictMode>\n  <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}